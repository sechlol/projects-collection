#include "Ex2Rna.h"
#include <sstream>

const std::string_view INPUT = "TCCAAACCTCGGCCCGTGGCTACGGCCCGACTGGACCTCGGCATGAGCTTCCGGGTCAACTAAGGGTTTGGACATTAAACTGATATAGCGTTTACGTTTAACTGGTGGAGGCCATTGAGGTTCGAGGGGTACGGGTTCACCTCGTGGTCCACATTAATCGGGCTGGTTTATCGATTGTAGAATAACGCGATCAAACTGCGGGCTGCAGAATAGGCAGCTTGCTGTACGGTTATGGACAATGATAGGCACAGTTTGTTGGTCCTAAAGCGCCGGTGATCCTTGACCTCAACTTCAACCACATCTTCCTGGGTTGGTAGCCTCGTGGGGCACGTTCCATTTAGGGTAATAATGTAGGCCGAGCAATGGTCTCTCGACTCCACGTACTAACAGGATCTTTGTTACAAGGATAGTGTCTCCTTCTGGTACGGGAAACGATGAAGCTCCTAGAAATCTGCTTAGCTGCATACAAACCTGTGGCGTCTCTTTGCGCCGCCTGCGGGAGTACTAAACTAAGTTCCGGGTTACGAAGAAGTCGTCGTAGTTTATGTGGAGGTCTTTCGTTCTGCGTACGCTGACTGTGACTAAGGACTGTATCGATGCGAGTACGTCGATGAATACAGTTATGTGCTCGGAGACATATACCCCATAGACAATCCTGTAGTAGTTCTTTGGCTCACTAGGCCATGATGTAAAGACTGTCAATTGGTGTTTAGTACTACCGCGTCCAGGAAATCAAGCTGCCCCTTCAACCTCAACACTATCCTACGTCGCAACAGGAATGGCCGTTCCACCCTGCGGCTCCACAACGTGAGCGTAAATCCTTCGATTTGTTATAGGTGTAGTACCTACAAGCTGCCTTACAAGTATTTCCGCGCAGCACATGCTGATTCTGGGCAAACCCCCAACCGGCGGTGTTTCTCGACTCACCCTCAACTGTCCGCTTTATAGAGGACACCTTAAAA";
const std::string_view EXPECTED = "UCCAAACCUCGGCCCGUGGCUACGGCCCGACUGGACCUCGGCAUGAGCUUCCGGGUCAACUAAGGGUUUGGACAUUAAACUGAUAUAGCGUUUACGUUUAACUGGUGGAGGCCAUUGAGGUUCGAGGGGUACGGGUUCACCUCGUGGUCCACAUUAAUCGGGCUGGUUUAUCGAUUGUAGAAUAACGCGAUCAAACUGCGGGCUGCAGAAUAGGCAGCUUGCUGUACGGUUAUGGACAAUGAUAGGCACAGUUUGUUGGUCCUAAAGCGCCGGUGAUCCUUGACCUCAACUUCAACCACAUCUUCCUGGGUUGGUAGCCUCGUGGGGCACGUUCCAUUUAGGGUAAUAAUGUAGGCCGAGCAAUGGUCUCUCGACUCCACGUACUAACAGGAUCUUUGUUACAAGGAUAGUGUCUCCUUCUGGUACGGGAAACGAUGAAGCUCCUAGAAAUCUGCUUAGCUGCAUACAAACCUGUGGCGUCUCUUUGCGCCGCCUGCGGGAGUACUAAACUAAGUUCCGGGUUACGAAGAAGUCGUCGUAGUUUAUGUGGAGGUCUUUCGUUCUGCGUACGCUGACUGUGACUAAGGACUGUAUCGAUGCGAGUACGUCGAUGAAUACAGUUAUGUGCUCGGAGACAUAUACCCCAUAGACAAUCCUGUAGUAGUUCUUUGGCUCACUAGGCCAUGAUGUAAAGACUGUCAAUUGGUGUUUAGUACUACCGCGUCCAGGAAAUCAAGCUGCCCCUUCAACCUCAACACUAUCCUACGUCGCAACAGGAAUGGCCGUUCCACCCUGCGGCUCCACAACGUGAGCGUAAAUCCUUCGAUUUGUUAUAGGUGUAGUACCUACAAGCUGCCUUACAAGUAUUUCCGCGCAGCACAUGCUGAUUCUGGGCAAACCCCCAACCGGCGGUGUUUCUCGACUCACCCUCAACUGUCCGCUUUAUAGAGGACACCUUAAAA";

bool Ex2Rna::Test() const {
    return Execute(INPUT) == EXPECTED;
}

std::string_view Ex2Rna::GetInput() const {
    return INPUT;
}

std::string Ex2Rna::Execute(const std::string_view &input) const {
    std::stringstream out;
    for(char i : input)
        out << (i == 'T' ? 'U' : i);
    return out.str();
}

std::string Ex2Rna::ToString(const std::string &result) const {
    return result;
}
